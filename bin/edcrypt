#!/usr/bin/env node

const { encrypt, decrypt } = require('../lib/edcrypt');
const { existsSync } = require('fs');
const { createInterface } = require('readline');

const MODE_OPTIONS = ['e', 'd'];

function execEdcrypt(mode, file, password) {
  switch(mode) {
    case 'e':
      encrypt({ file, password });
      break;
    case 'd':
      decrypt({ file, password });
      break;
  }
}

// ex.
// $ node edcrypt e file.txt pass
const [ mode, file, password ] = process.argv.slice(2);

if(!MODE_OPTIONS.includes(mode)) {
  console.log(`Mode ${mode ? `'${mode}' ` : ''}invalid`);
  console.log('Options: [e]ncrypt | [d]ecrypt');
  process.exit(1);
}

if(!file) {
  console.log('Filename required');
  process.exit(1);
} else if(!existsSync(file)) {
  console.log(`Filename ${file} does not exist`);
  process.exit(1);
}

if(!password) {
  const readline = createInterface({
    input: process.stdin,
    output: process.stdout
  });

  readline.question(`Password: `, readlinePass => {
    if(!readlinePass) {
      process.exit(1);
    }

    execEdcrypt(mode, file, readlinePass);
    readline.close();
  });
} else {
  execEdcrypt(mode, file, password);
}
